/* 
We use CSS to style elements,
to create a layout for the overall page.
оформление за цялата страница

We seperated the presentation from the content.

*/

/* margin is outside of any defined borders, padding is inside of any defined borders.
Both used to create space around elements. */

/* https://www.w3schools.com/css/css_boxmodel.asp */

* {
  /*  By default some elements get some margin automatically, if we don't define them.
 That can create some problems when we're trying to style our page.
 Because of that we usually reset all of the margins and paddings on ALL elements,
 BEFORE any  thing else called 'Global reset'. */
  /* 0 pixels, but when we use 0, we don't need to specify unit */
  padding: 0;
  margin: 0;
  /* We always also add box sizing property.
  It includes the padding and border in the width and height  
  that we specify for an element.
  Example: we give width of an element to 100 pixels, and then add a padding of 20px on each side.
  Then 100 + 20 + 20 = 140px width in TOTAL, which could create problems, if all we wanted was a width of 100px.
  To fix that, we use box sizing property set to border-box. In this case, if we specify width of 100px,
  It will always be 100px, no matter padding/border. 
  https://developer.mozilla.org/en-US/docs/Web/CSS/box-sizing
  https://www.w3schools.com/css/css3_box-sizing.asp

  !
  Important: When you set the width and height properties of an element with CSS,
  you just set the width and height of the content area.
  To calculate the full size of an element, you must also add padding, borders and margins.

  That's why we use border-box. 
  */
  box-sizing: border-box;
}

/*
We write CSS in external CSS file.
To style elements, we need to first select them. 
There are different types of selectors in CSS.
Most basic selector is the 'element selector',
with 'element selector' we can select all elements of a certain type,
ex. 'body'
that's body element selector (body), {...} -> declaration block,
bg-color: green -> simple declaration,
property: value */
body {
  /* here we write the CSS declarations. */
  /* property name : value */
  background-color: rgb(244, 244, 122);
  /* IN practice, we use web fonts, ex. from a service like Google Fonts */
  font-family: Arial;
  /* We set the font-family on the body,
    why other elements like the h1 got Arial as font too ?
    That's because the font family property is a property that GETS INHERITED.
    All child elements of the body element will automatically get the font assigned to them.
    That's handy because we dont need to set the font seperately on all these elements.
    setting font on the body, the font will be set on all the child elements.   */

  /* Most properties actually do NOT get inherited */
  /* But generally, all the properties related to fonts will be inherited. */

  font-size: 20px;
  /* 
  it all got a little bigger, HOWEVER NOT ALL elements have a font-size of 20px now.
  That's bcs the elements like for ex. h1/h2 have PREDEFINED font-sizes,
  that are automatically applied from the browser.
  saw 'user agent stylesheet' in inspect mode where styles are.
  */

  /* Let's add some padding to the body, 
  Why do we use padding? bcs we want to add some space INSIDE of the body element.
  Basically, to create some space between the border of the browser and the content.
  */

  /* There are other units in CSS, we don't always have to use pixels.
  We could use %, em, rem or other.
  But to start out it's okay to use pixels. */
  padding: 50px;
}

p {
  color: rgb(244, 5, 5);
}

/* another element selector - h1 */
h1 {
  /* Overwriting the browser predefined font-size */
  font-size: 40px;
  /* we could have used padding-bottom, and result will be the same,
  but it makes more sense for this space actually to be outside the border. */
  margin-bottom: 25px;
}

/* https://www.smashingmagazine.com/2007/07/css-specificity-things-you-should-know/ */

/* class selector (.class-name) */
.first-p {
  /* we can use it on multiple elements. */
  color: blue;
}

/* id selector */
#your-name {
  /* we use id on ONE element in the html. */
  background-color: rgb(216, 216, 56);
  /* border property is so called "shorthand property", because as value we can set multiple values  */
  /* border: thickness, style, color(is that hex color code?) */
  border: 4px solid #444;
  /* border property is not inherited, bcs if it was inherited, then all child elements in the form,
  would have borders TOO. That wouldn't make sense, that's why border is NOT inherited.  */
}

/* 67. Introduction to CSS Box Model */

/*
 The Box model is one of the most  fundamental parts of CSS.
 Main factor that defines how elements are displayed on a webpage.
 And also how they are sized.
 Each element on a webpage can be seen as a rectangular box each box has:
 content(width, height), padding, border, margin.
 We can specify all these using CSS properties.
 NOTE: the are all optional. So, there can be boxes with no margins/padding/border at all.
 IF we want to create space between two elements(boxes) we will simply use their margin properties in CSS.

 ?
 Fill area: area that gets filled with background color or background image.
 Fill area also includes the padding and border.
 ?

 By default some elements get some margin automatically, if we don't define them.
 That can create some problems when we're trying to style our page.
 Because of that we usually reset all of the margins and paddings on ALL elements,
 BEFORE any  thing else called 'Global reset'.
 To do that we need to select all of the elements, for that we have special selector (*).
 */
