{
    "env": {
        "browser": true,
        "es2021": true
    },
    "extends": "google",
    "overrides": [],
    "parserOptions": {
        "ecmaVersion": "latest"
    },
    "rules": {
        "space-before-function-paren": [
            "error",
            {
                "anonymous": "always",
                "named": "never",
                "asyncArrow": "always"
            }
        ],
        "quotes": [
            "error",
            "single",
            {
                "avoidEscape": true
            }
        ],
        "no-const-assign": "error",
        "indent": [
            "error",
            2
        ],
        // https://eslint.org/docs/latest/rules/operator-linebreak
        "operator-linebreak": [
            "error",
            "after",
            {
                "overrides": {
                    "?": "before",
                    ":": "before"
                }
            }
        ],
        // "@typescript-eslint/no-explicit-any": "error" -> How to turn errors for any in JS ?
        "no-unused-vars": [
            "error",
            {
                // https://eslint.org/docs/latest/rules/no-unused-vars#varsignorepattern
                "varsIgnorePattern": "_",
                "argsIgnorePattern": "_",
                // first el, bcs if below "args", ignoring does NOT work.
                "vars": "all",
                "args": "all",
                "ignoreRestSiblings": false,
                "caughtErrors": "all"
            }
        ],
        "arrow-parens": [
            "warn",
            "always"
        ],
        // https://eslint.org/docs/latest/rules/no-undef
        "no-undef": [
            "error",
            {
                "typeof": true
            }
        ],
        "max-len": [
            "warn",
            {
                "code": 80,
                "comments": 120
            }
        ],
        // OBJECT-CURLY-SPACING IS BLOCKING THE WHOLE ESLINT IF IT'S ON!!!!
        // "object-curly-spacing": [
        //     "always"
        // ],
        "strict": [
            "warn",
            "global"
        ]
    }
}